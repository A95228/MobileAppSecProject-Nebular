import { Component, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { MatTableDataSource } from '@angular/material/table';


export interface APKID {
  severity: string;
  dex: string;
  detextion: string;
}

export interface DomaineMalwareCheck {
  severity: string;
  domain: string;
  ip: string;
  country: string;
  city: string;
  map: string;
}

export interface AndroidJavaApi {
  api: string;
  file: string;
}
export interface BrowsableActivities {
  activity: string;
  file: string;
}

const APKID_DATA: APKID[] = [

];
const DOMAINEMALWARECHECK_DATA: DomaineMalwareCheck[] = [
  {
    severity: 'high',
    domain: 'cat.eduroam.org',
    ip: '145.100.191.84',
    country: 'Netherlands',
    city: 'Utrecht',
    map: ''
  },

];
const ANDROIDJAVAAPI_DATA: AndroidJavaApi[] = [
  {
    api: "Android Notifications",
    file: "",
  },

];
const BROWSABLEACITIVITIES_DATA: BrowsableActivities[] = [
  {
    activity: "com.facebook.CustomTabActivity",
    file: ""
  },

];
@Component({
  selector: 'ngx-malware',
  styleUrls: ['./malware.component.scss'],
  templateUrl: './malware.component.html',
})


export class MalwareComponent implements OnInit {
  title: string;
  id: number;
  sub: any;
  displayedColumnsAPKID: string[] = [  'severity' , 'dex', 'detection'];
  displayedColumnsDomaineMalwareCheck: string[] = [ 'severity', 'domain', 'ip', 'country', 'city' ];
  displayedColumnsAndroidJavaApi: string[] = [  'api',   'file' ];
  displayedColumnsBrowsableActivities: string[] = [  'activity',   'file' ];

  dataSourceAPKID = new MatTableDataSource(APKID_DATA);
  dataSourceDomaineMalwareCheck = new MatTableDataSource(DOMAINEMALWARECHECK_DATA);
  dataSourceAndroidJavaApi = new MatTableDataSource(ANDROIDJAVAAPI_DATA);
  dataBrowsableActivities = new MatTableDataSource(BROWSABLEACITIVITIES_DATA);

  selectedItem = "";
  constructor(private route: ActivatedRoute) {
    this.title = "Zoom.Us";

  }

  ngOnInit() {
    this.sub = this.route.params.subscribe(params => {
      this.id = +params['id'];
    });
    this.dataSourceAPKID.filterPredicate = (data: APKID, filter: string) => {
      return data.severity == filter;
    };
  }
  applyFilter(filterValue: string) {
    this.dataSourceAPKID.filter = filterValue;
  }
}
